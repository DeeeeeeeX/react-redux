{"version":3,"file":"static/js/622.7a12c3b9.chunk.js","mappings":"8LACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAwP,6B,mBCWxP,EARmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,gBAAKC,UAAWC,EAAW,IAAMA,EAAS,UAC7C,SAAC,KAAO,CAACC,GAAIJ,EAAK,SAAED,EAAMM,QAElC,ECHA,EAJgB,SAACN,GACb,OAAO,gBAAKG,UAAWC,EAAS,SAAEJ,EAAMO,SAC5C,E,iDCgCMC,GAAcC,EAAAA,EAAAA,GAAiB,IAW/BC,GAAsBC,EAAAA,EAAAA,GAAW,CAACC,KAAM,wBAAlBD,EATL,SAACX,GACpB,OACI,kBAAMa,SAAUb,EAAMc,aAAa,WAC/B,SAACC,EAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUX,GAAcF,KAAM,iBAAkBc,YAAa,wBACpG,0BAAK,iDAGjB,IAIA,EAzCgB,SAACpB,GAEb,IAIIqB,EAAQrB,EAAMsB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAU,CAACpB,KAAMoB,EAAEpB,KAAiBJ,GAAIwB,EAAExB,IAAZwB,EAAExB,GAAe,IAEzFyB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAO,CAACtB,QAASsB,EAAEtB,SAAcsB,EAAE3B,GAAM,IAEzF,OAAKF,EAAM8B,QAGP,iBAAK3B,UAAWC,EAAU,WACtB,gBAAKD,UAAWC,EAAe,SAC1BmB,KAEL,iBAAKpB,UAAWC,EAAW,WACvB,yBAAMuB,KACN,gBAAKxB,UAAWC,KAChB,SAACM,EAAmB,CAACG,SApBb,SAACkB,GACjB/B,EAAMgC,YAAYD,EAAOE,eAC7B,WAQ0B,SAAC,KAAQ,CAAC5B,GAAG,UAc3C,E,0DC/BI6B,EAA6B,SAACb,GAAK,MAAM,CACzCS,OAAQT,EAAMc,KAAKL,OACtB,ECeD,GAAeM,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAAChB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IAEyB,SAACgB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,GAASC,EAAAA,EAAAA,GAAmBN,GAChC,EAER,KDXgC,SAACO,GAAe,IAEtCC,EAAiB,qGAKlB,OALkB,8BACnB,WACI,OAAKC,KAAK1C,MAAM8B,QAET,SAACU,GAAS,UAAKE,KAAK1C,SAFI,SAAC,KAAQ,CAACK,GAAG,UAGhD,KAAC,EALkB,CAASsC,EAAAA,WAQhC,OAAON,EAAAA,EAAAA,IAAQH,EAARG,CAAoCI,EAC/C,GCEA,CAGEG,E","sources":["webpack://popitkanomer1337/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Q0LmL\",\"dialogsItems\":\"Dialogs_dialogsItems__yt62w\",\"active\":\"Dialogs_active__NOL5k\",\"dialog\":\"Dialogs_dialog__xhUHf\",\"messages\":\"Dialogs_messages__4a7It\",\"message\":\"Dialogs_message__qpBy8\",\"sendMessage\":\"Dialogs_sendMessage__IE842\"};","import React from \"react\";\nimport s from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\"\n\nconst DialogItem = (props) => {\n    let path = \"/dialogs/\" + props.id;\n\n    return <div className={s.dialog + \" \" + s.active}>\n        <NavLink to={path}>{props.name}</NavLink>\n    </div>\n}\n\nexport default DialogItem;","import React from \"react\";\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n    return <div className={s.dialog}>{props.message}</div>\n}\n\nexport default Message;","import React from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Navigate} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\nconst Dialogs = (props) => {\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\n\n    if (!props.isAuth) return <Navigate to=\"/login\"/>;\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n                <div className={s.sendMessage}></div>\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n}\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field component={Textarea} validate={[required, maxLength50]} name={'newMessageBody'} placeholder={'Enter your message'} />\n            <div><button>Send message</button></div>\n        </form>\n    )\n}\n\nconst AddMessageFormRedux = reduxForm ({form: 'dialogAddMessageForm'})(AddMessageForm);\n\nexport default Dialogs;","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\"/>;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","import {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport React from \"react\";\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    WithAuthRedirect\n)(Dialogs);"],"names":["props","path","id","className","s","to","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}